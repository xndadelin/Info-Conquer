limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

limit_req_zone $server_name zone=global:10m rate=1000r/s;
proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=my_cache:100m max_size=10g inactive=60m use_temp_path=off;

server {
    root /root/Info-Conquer/client/build;
    index index.html index.htm index.nginx-debian.html;
    server_name infoconquer.net;
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    proxy_cache_lock on;
    proxy_cache_lock_timeout 5s;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
  
    location / {
        limit_req zone=mylimit burst=20 nodelay;
        limit_req zone=global burst=500;
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        proxy_cache my_cache;
        proxy_cache_valid 200 301 302 10m;
        proxy_cache_valid any 1m;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=600";
    }

    location /graphql {
        limit_req zone=mylimit burst=20 nodelay;
        limit_req zone=global burst=500;
        proxy_pass http://localhost:8080/graphql;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        proxy_cache my_cache;
        proxy_cache_valid 200 301 302 10m;
        proxy_cache_valid any 1m;
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=600";
    }

    listen [::]:443 ssl http2 ipv6only=on; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/infoconquer.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/infoconquer.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.infoconquer.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    if ($host = infoconquer.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name infoconquer.net www.infoconquer.net;
    return 404; # managed by Certbot
}
